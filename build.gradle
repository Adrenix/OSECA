buildscript {
    repositories {
        jcenter()
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = "${mc_version}-${mod_version}"
group = mod_group
archivesBaseName = mod_archive

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

mixin {
    add sourceSets.main, mod_mixin_refmap
    defaultObfuscationEnv "searge"
}

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    String JVMArgs = "-Dfml.coreMods.load=${mod_core}"
    String RunArgs = "--mixin ${mod_mixin}"

    runs {
        client {
            args = [RunArgs]
            jvmArgs = [JVMArgs]

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    compile('org.spongepowered:mixin:0.8.3-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'mod_id': mod_id, 'mod_name': mod_name, 'mod_description': mod_description, 'mod_version': mod_version,
               'mc_version': mc_version, 'mod_url': mod_url, 'mod_author': mod_author, 'mod_logo': mod_logo
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from {
        configurations.compile
            .filter { "mixin-0.8.3-SNAPSHOT.jar" == it.name }
            .collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    manifest {
        attributes([
            "FMLCorePlugin": mod_core,
            "FMLCorePluginContainsFMLMod": "true",
            "ForceLoadAsMod": "true",
            "Specification-Title": mod_id,
            "Specification-Vendor": mod_author,
            "Specification-Version": "1",
            "Implementation-Title": mod_name,
            "Implementation-Version": mod_version,
            "Implementation-Vendor" : mod_author,
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "MixinConfigs": mod_mixin,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

sourceSets { main { output.resourcesDir = output.classesDir } }
